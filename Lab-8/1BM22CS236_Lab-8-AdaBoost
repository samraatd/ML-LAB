{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPBcuXWU2C5qrLcNRo6Em2r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uhMBxfKbZJE6","executionInfo":{"status":"ok","timestamp":1746598832215,"user_tz":-330,"elapsed":23923,"user":{"displayName":"Samraat Dabolay","userId":"02360067771657490361"}},"outputId":"3c3c1aec-f782-4fde-ebaf-01184a9ea9b5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"DcaXVT5WaP8R","executionInfo":{"status":"ok","timestamp":1746598959640,"user_tz":-330,"elapsed":161,"user":{"displayName":"Samraat Dabolay","userId":"02360067771657490361"}},"outputId":"b25995f3-b18d-4888-e365-8dacdf42e6df"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  fnlwgt  education_num  capital_gain  capital_loss  hours_per_week  \\\n","0   39   77516             13          2174             0              40   \n","1   50   83311             13             0             0              13   \n","2   38  215646              9             0             0              40   \n","3   53  234721              7             0             0              40   \n","4   28  338409             13             0             0              40   \n","\n","   income_level  \n","0             0  \n","1             0  \n","2             0  \n","3             0  \n","4             0  "],"text/html":["\n","  <div id=\"df-72edefff-1c1e-4594-9ce8-b567c91e40d6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>fnlwgt</th>\n","      <th>education_num</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours_per_week</th>\n","      <th>income_level</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>77516</td>\n","      <td>13</td>\n","      <td>2174</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>83311</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>215646</td>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>234721</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>338409</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72edefff-1c1e-4594-9ce8-b567c91e40d6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-72edefff-1c1e-4594-9ce8-b567c91e40d6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-72edefff-1c1e-4594-9ce8-b567c91e40d6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-dd5d787b-a1ee-461c-aed3-7792d927f0eb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd5d787b-a1ee-461c-aed3-7792d927f0eb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-dd5d787b-a1ee-461c-aed3-7792d927f0eb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 48842,\n  \"fields\": [\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13,\n        \"min\": 17,\n        \"max\": 90,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          28,\n          73,\n          35\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fnlwgt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 105604,\n        \"min\": 12285,\n        \"max\": 1490400,\n        \"num_unique_values\": 28523,\n        \"samples\": [\n          159077,\n          199450,\n          181773\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education_num\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 16,\n        \"num_unique_values\": 16,\n        \"samples\": [\n          13,\n          9,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_gain\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7452,\n        \"min\": 0,\n        \"max\": 99999,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          2176,\n          10520,\n          2961\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capital_loss\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 403,\n        \"min\": 0,\n        \"max\": 4356,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          1974,\n          419,\n          1870\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hours_per_week\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 99,\n        \"num_unique_values\": 96,\n        \"samples\": [\n          97,\n          88,\n          77\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"income_level\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score\n","import matplotlib.pyplot as plt\n","\n","# Step 1: Load the dataset\n","df = pd.read_csv('/content/drive/MyDrive/ML_LAB/Lab-8/income.csv')\n","\n","# Step 2: Preprocess the data\n","# Replace categorical columns with dummy variables (one-hot encoding)\n","df = pd.get_dummies(df, drop_first=True)\n","\n","# Separate features and target\n","X = df.drop('income_level', axis=1)  # Features\n","y = df['income_level']               # Target variable\n","\n","# Step 3: Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","\n","# Step 4: Train AdaBoost classifier with 10 estimators\n","base_model = DecisionTreeClassifier(max_depth=1)  # Using a decision stump (shallow tree)\n","ada_model = AdaBoostClassifier(base_model, n_estimators=10, random_state=42)  # No `base_estimator`, directly pass the model\n","\n","# Train the model\n","ada_model.fit(X_train, y_train)\n","\n","# Step 5: Evaluate the model with 10 estimators\n","y_pred = ada_model.predict(X_test)\n","initial_accuracy = accuracy_score(y_test, y_pred)\n","print(f'Accuracy with 10 estimators: {initial_accuracy:.4f}')\n","\n","# Step 6: Fine-tune the model by changing the number of estimators\n","# We'll test different numbers of estimators and record the accuracy scores\n","estimators_range = range(10, 201, 10)  # Trying from 10 to 200 estimators\n","accuracies = []\n","\n","for n_estimators in estimators_range:\n","    ada_model = AdaBoostClassifier(base_model, n_estimators=n_estimators, random_state=42)\n","    ada_model.fit(X_train, y_train)\n","    y_pred = ada_model.predict(X_test)\n","    accuracies.append(accuracy_score(y_test, y_pred))\n","\n","# Step 7: Plot the results\n","plt.plot(estimators_range, accuracies, marker='o')\n","plt.title('AdaBoost Classifier Accuracy vs. Number of Estimators')\n","plt.xlabel('Number of Estimators')\n","plt.ylabel('Accuracy')\n","plt.grid(True)\n","plt.show()\n","\n","# Find the best number of estimators\n","best_n_estimators = estimators_range[accuracies.index(max(accuracies))]\n","best_accuracy = max(accuracies)\n","\n","print(f'Best accuracy: {best_accuracy:.4f} with {best_n_estimators} estimators')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"vLkesYAkZqpK","executionInfo":{"status":"ok","timestamp":1746599105132,"user_tz":-330,"elapsed":50080,"user":{"displayName":"Samraat Dabolay","userId":"02360067771657490361"}},"outputId":"31040d8e-636c-4dfd-c83f-20d2ff3b1bab"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy with 10 estimators: 0.8277\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Best accuracy: 0.8312 with 160 estimators\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import AdaBoostClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","import matplotlib.pyplot as plt\n","\n","# Step 1: Load the dataset\n","df = pd.read_csv('/content/drive/MyDrive/ML_LAB/Lab-8/income.csv')\n","\n","# Step 2: Preprocess the data\n","# Replace categorical columns with dummy variables (one-hot encoding)\n","df = pd.get_dummies(df, drop_first=True)\n","\n","# Separate features and target\n","X = df.drop('income_level', axis=1)  # Features\n","y = df['income_level']               # Target variable\n","\n","# Step 3: Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","\n","# Step 4: Fine-tune the model by changing the number of estimators\n","estimators_range = range(10, 201, 10)  # Trying from 10 to 200 estimators\n","accuracies = []\n","\n","# For each n_estimators, we train the model and store accuracy\n","for n_estimators in estimators_range:\n","    base_model = DecisionTreeClassifier(max_depth=1)  # Using a decision stump (shallow tree)\n","    ada_model = AdaBoostClassifier(base_model, n_estimators=n_estimators, random_state=42)\n","    ada_model.fit(X_train, y_train)\n","    y_pred = ada_model.predict(X_test)\n","    accuracies.append(accuracy_score(y_test, y_pred))\n","\n","# Step 5: Find the best number of estimators\n","best_n_estimators = estimators_range[accuracies.index(max(accuracies))]\n","best_accuracy = max(accuracies)\n","\n","print(f'Best accuracy: {best_accuracy:.4f} with {best_n_estimators} estimators')\n","\n","# Step 6: Train the model with the best number of estimators\n","best_ada_model = AdaBoostClassifier(base_model, n_estimators=best_n_estimators, random_state=42)\n","best_ada_model.fit(X_train, y_train)\n","\n","# Step 7: Evaluate the model with the best number of estimators\n","y_pred_best = best_ada_model.predict(X_test)\n","accuracy_best = accuracy_score(y_test, y_pred_best)\n","\n","# Step 8: Compute the confusion matrix\n","conf_matrix = confusion_matrix(y_test, y_pred_best)\n","\n","# Step 9: Display the confusion matrix\n","print(\"Confusion Matrix:\")\n","print(conf_matrix)\n","\n","# Plot the confusion matrix for better visualization\n","import seaborn as sns\n","plt.figure(figsize=(6, 5))\n","sns.heatmap(conf_matrix, annot=True, fmt=\"d\", cmap=\"Blues\", xticklabels=['Low', 'High'], yticklabels=['Low', 'High'])\n","plt.xlabel('Predicted')\n","plt.ylabel('True')\n","plt.title('Confusion Matrix')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"pQTIn-V0aMES","executionInfo":{"status":"ok","timestamp":1746599160100,"user_tz":-330,"elapsed":45441,"user":{"displayName":"Samraat Dabolay","userId":"02360067771657490361"}},"outputId":"510279a6-57e0-4d24-c35e-a546c63e41bd"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Best accuracy: 0.8312 with 160 estimators\n","Confusion Matrix:\n","[[10658   451]\n"," [ 2023  1521]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"dhnnn6O5a3Zy"},"execution_count":null,"outputs":[]}]}